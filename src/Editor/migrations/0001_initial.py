# Generated by Django 4.1.7 on 2023-06-09 06:24

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_asset', models.BooleanField(default=False)),
                ('img', models.ImageField(null=True, upload_to='media')),
                ('activation_date', models.DateField(blank=True, null=True)),
                ('deactivation_date', models.DateField(blank=True, null=True)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('sort_number', models.BigIntegerField(default=10000)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails')),
                ('size', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('salesforce_id', models.CharField(default='0', max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('assets', models.ManyToManyField(blank=True, related_name='products', to='Editor.asset')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
            ],
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_push_oce', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_pinch', models.BooleanField(default=False)),
                ('is_double_tap', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_send_email', models.BooleanField(default=False)),
                ('player_gesture', models.CharField(choices=[('TT', 'Taptop'), ('TB', 'TapBottom'), ('SU', 'SwipeUp'), ('SD', 'SwipeDown')], default='TapBottom', max_length=30)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presentations', to='Editor.folder')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('salesforce_id', models.CharField(default='0', max_length=255)),
                ('assets', models.ManyToManyField(blank=True, related_name='messages', to='Editor.asset')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.product')),
            ],
        ),
        migrations.CreateModel(
            name='AssetCoordinate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinate_type', models.CharField(choices=[('link', 'Link'), ('popup', 'Popup'), ('video', 'Video')], max_length=15)),
                ('start_top', models.IntegerField(default=0)),
                ('start_left', models.IntegerField(default=0)),
                ('end_top', models.IntegerField(default=0)),
                ('end_left', models.IntegerField(default=0)),
                ('linked_url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='popups')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos')),
                ('is_embedded', models.BooleanField(default=False)),
                ('size', models.FloatField(default=0.0)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordinates', to='Editor.asset')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company')),
                ('linked_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_from_assets', to='Editor.asset')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Editor.company'),
        ),
        migrations.AddField(
            model_name='asset',
            name='presentation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='Editor.presentation'),
        ),
    ]
